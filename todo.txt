DONE See articles from DB
DONE See Campaigns
DONE remove 'id' attribute from articles
DONE add user model with unsalted password
DONE add backing modal and controller

DONE Logout
DONE salt passwords
DONE current_user
DONE populate campaigns to user
DONE new campaign saves to user
DONE user-show at '/handle'

DONE show user 
DONE new article
DONE campaign populate articles
DONE article populate campaign

Tests 
  signup
  login
  articles#index and campaigns#index
  articles#create and campaings#create
  campaign#index
  campaign#create

send emails - emailjs or express-mailer. . .

homepage 
  show date and time
  add topics bar

category#show

Sort out public profile and dashboard
  follow Medium:
    dashboard = '/me' 
    public profile = '/@ajbraus'
    "Drafts", "Public", "Unlisted"
    If you back you get access to unlisted articles
    "Last edited 2 months ago" (234 words) so far

  campaigns, live, not live, current funding, graph of funding, paid to date, shares, reach, followers, backers, sharebackers
  articles, drafts, published


seed db with rss feed . . . 
  http://news.google.com/?output=rss
    - top news
    - tech news
    - satirical news

campaigns video embed

bugs
error handling
full_name pattern not working


New Campaign - kickstarter wizard
  authorization - only logged in can create new campaign
  category dropdown select
  save for later vs. publish
  wizard


Add Passport Email, Twitter, FB
  onboarding - authentication, confirm, username, email, & set password, pick 5 topics to follow

  satellizer-local
    confirm email

  satellizer-facebook
    - add email & password
  satellizer-twitter
    - add email & password

Style GlobalAlerts
New Article - medium editor
New Backer - Michael

add tags ('topics')

subscribe
one time back
share backers

like rewards

invite only
onboard like twitter & tumblr
This is like twitter . . . but backed. Essentially backed to write tweets. . . 
See articles - sign up for invitation - email
1. email, pw, pw confirm
2. how old are you? 30 years young
3. follow topics, follow campaigns
4. push mobile
5. confirm email -> push mobile

campaign.author_id
user follows campaigns (user.campaigns = [id, id]
user follows topics (user.topics = ['string', 'string'])

user starts campaigns (user.unpublished_campaigns = [id, id])
user publishes campaings (user.published_campaigns = [id, id])
user starts articles (user.unpublished_articles = [id, id])
user publishes articles (user.published_articles = [id, id])

When to use sockets - POST comments, POST backing, POST articles

WEBSITE
header date
create account
mobile app plug
topics
Subscribe
"Suggested for You"
Click hole share buttons
See campaigns
  DONE Nested routes /campaign/:id/article/:id
New articles Save and Publish 
New campaigns Save and Publish

DONE Basic navigation and templating
DONE See articles





search
  created a weighted text index
  DONE db.articles.createIndex(
                       {
                         title: "text",
                         body: "text"
                       },
                       {
                         weights: {
                                    title: 5
                                  },
                         name: "ArticleIndex"
                       }
                     )
  db.campaigns.createIndex(
                       {
                         title: "text",
                         category: "text",
                         body: "text"
                       },
                       {
                         weights: {
                                    title: 5
                                  },
                         name: "CampaignIndex"
                       }
                     )
